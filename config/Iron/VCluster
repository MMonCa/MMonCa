string shape void
float density 8.46e22
string to   VCluster
string from VCluster
float density.cm3 8.46e22
string migration.type 3d
// coordinates axis.2 1 0 0
coordinates axis.1 0 1 0 
coordinates axis.0 0 0 1
coordinates not.in.plane 0 0 0
float axes.ratio 1
float lambda         0.287

bool IV.model false
bool percolation true
proc transform.to   { }
proc transform.from { }

proc migration   { 
	set list ""	
	for { set size 2 } { $size < 500 } { incr size } {
		set pref 0
		set ener 5
		if { $size == 2 } { set pref 8.2e-3; set ener 0.62 }
		if { $size == 3 } { set pref 8.2e-3; set ener 0.35 }
		if { $size == 4 } { set pref 8.2e-3; set ener 0.48 }
		
		lappend list V$size < $pref $ener >
	}
		lappend list C2V < $pref 1.4 >
	return $list
}

proc formation {
	set list ""	
	set pot 0
	for { set size 2 } { $size < 500 } { incr size } {
	    set e [expr 2./3.]
		set Ef 2.12
		set Eb2 0.30
		set ener [expr $Ef + ($Eb2 - $Ef)*(pow($size,$e)-pow($size-1,$e))/.587401]
		if { $size == 2 } { set ener 0.3  }
		if { $size == 3 } { set ener 0.37 }
		if { $size == 4 } { set ener 0.62 }
		
		set pot [expr $pot - $ener]
		lappend list V$size < [expr $size*$Ef + $pot] >
	}
		lappend list C2V < [expr 1.47 - 1.0] >
		lappend list CV2 < [expr 1.47 - 0.5] >
		lappend list CV3 < [expr 1.47 -0.5 - 0.3] >
		lappend list CV4 < [expr 1.47 - 0.5 -0.3 - 0.1] >
	return $list
}

proc prefactor {
	set list ""	
	for { set size 2 } { $size < 500 } { incr size } {
		set pref [expr 8.2e-3*$size]
		lappend list V$size,V $pref
	}
        lappend list C2V,C 8.2e-3
        lappend list CV2,V 8.2e-3    
        lappend list CV3,V 8.2e-3    
        lappend list CV4,C 8.2e-3    
        lappend list CV4,V 8.2e-3            
	return $list
}


